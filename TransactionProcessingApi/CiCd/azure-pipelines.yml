trigger:
- main

pool:
    name: 'Default'

stages:
- stage: 'Build'
  displayName: 'Builds the API solution'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: 'TransactionProcessingApi/**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: 'TransactionProcessingApi/**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: 'TransactionProcessingApi/**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop
    
- stage: 'Deploy'
  displayName: 'Deploy the API'
  dependsOn: Build
  variables:
    functionAppName: 'HackathonTransactionProcessorAPI'
  jobs:
  - deployment: Deploy
    environment: test
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFileCopy@4
            inputs:
              SourcePath: 'TransactionProcessingApi/CiCd/deployment.json'
              azureSubscription: $(workingConnectionVar)
              Destination: 'AzureBlob'
              storage: $(workingStorageAccountVar)
              ContainerName: $(workingStorageContainerVar)
            name: ArmTemplateFileCopy

          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: $(workingConnectionVar)
              subscriptionId: $(azureSubscriptionIdVar)
              action: 'Create Or Update Resource Group'
              resourceGroupName: $(azureResourceGroupVar)
              location: $(resourceLocationVar)
              templateLocation: 'URL of the file'
              csmFileLink: '$(ArmTemplateFileCopy.StorageContainerUri)deployment.json$(ArmTemplateFileCopy.StorageContainerSasToken)'
              csmParametersFileLink: '$(ArmTemplateFileCopy.StorageContainerUri)deployment.parameters.json$(ArmTemplateFileCopy.StorageContainerSasToken)'
              overrideParameters: '-appName "$(functionAppName)" -location "$(resourceLocationVar)" -appInsightsLocation "$(resourceLocationVar)"'
              deploymentMode: 'Incremental'
              deploymentName: 'testDeployment01'

          - download: current
            artifact: drop
          
          - task: AzureFunctionApp@1
            displayName: 'Azure Function Deploy for API'
            inputs:
                azureSubscription: $(workingConnectionVar)
                appName: '$(functionAppName)'
                package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/TransactionProcessing.Functions.zip'